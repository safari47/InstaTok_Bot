from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, FSInputFile
from keyboards.kb import main_contact_kb
from aiogram.utils.markdown import hlink
from utils.instagram.instagram import download_instagram_post
from utils.db import get_user_by_id, add_user
from utils.tiktok.get_content import get_content
from utils.tiktok.get_video_detail import get_video_detail
from utils.tiktok.musicaldown import musicaldown
import pathlib
from loguru import logger
from config.config import settings, bot
from config.static import admin_notification, en, ru

cwd = pathlib.Path(__file__).parent.parent
router = Router()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(CommandStart())
async def start(message: Message):
    print(message.from_user.language_code)
    telegram_id = message.from_user.id
    user_data = await get_user_by_id(telegram_id)

    if user_data is None:
        await add_user(
            telegram_id=telegram_id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
        )

        await bot.send_message(
            chat_id=settings.ADMIN_IDS,  # –ó–¥–µ—Å—å —Å–ø–∏—Å–æ–∫ –∏–ª–∏ ID –∞–¥–º–∏–Ω–∞
            text=admin_notification.format(
                full_name=message.from_user.full_name,
                telegram_id=telegram_id,
                username=(
                    message.from_user.username if message.from_user.username else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
                ),
            ),
        )

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π)
    user_language = "ru" if message.from_user.language_code == "ru" else "en"

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    welcome_text = ru["welcome_text"] if user_language == "ru" else en["welcome_text"]
    welcome_text = welcome_text.format(username=message.from_user.username)

    await message.answer(welcome_text, reply_markup=main_contact_kb())


@router.message(F.text == "üí¨ INFO")
async def bot_info(message: Message):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π)
    language_code = "ru" if message.from_user.language_code == "ru" else "en"

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    response_text = ru["info"] if language_code == "ru" else en["info"]

    await message.answer(
        response_text.format(
            donate_url="https://www.tbank.ru/cf/AGhwjuw96bl"
        ),  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –¥–æ–Ω–∞—Ç
        disable_web_page_preview=True,
        parse_mode="Markdown",
    )


@router.message(F.text.regexp(r"(https?://(www\.)?instagram\.com/\S+)"))
async def download_media(message: Message):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π)
    language_code = "ru" if message.from_user.language_code == "ru" else "en"
    messages = ru["messages"] if language_code == "ru" else en["messages"]

    wait_message = await message.answer(messages["wait_message"])
    input_url = message.text
    try:
        output_media = download_instagram_post(input_url)

        await wait_message.delete()

        for media_type, url in output_media.items():
            try:
                if "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" in media_type:
                    await message.answer_photo(url)
                elif "–í–∏–¥–µ–æ" in media_type:
                    await message.answer_video(url)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞: {str(e)} –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ URL: {input_url}")
                await message.answer(messages["send_image_error"])
        else:
            logger.info(
                f"ID: {message.from_user.id}, –ò–º—è: {message.from_user.username} ‚Äî —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è Instagram."
            )
    except Exception as e:
        await wait_message.delete()
        logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {str(e)} URL: {input_url}")
        await message.reply(messages["download_error"])


@router.message(F.text.regexp(r"(https?://(www\.|vm\.|vt\.|vn\.)?tiktok\.com/\S+)"))
async def download_tiktok(message: Message):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ —Å–æ–æ–±—â–µ–Ω–∏—è
    if message.from_user.language_code.startswith("ru"):
        messages = ru["messages"]
    else:
        messages = en["messages"]

    output = None  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é output
    try:
        wait_message = await message.answer(messages["wait_message"])

        input_url = message.text
        video_id, video_url, cookies = await get_video_detail(input_url)

        if video_id is None:
            await wait_message.delete()
            await message.answer(messages["tiktok_not_exist"])
            return  # –ó–∞–≤–µ—Ä—à–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ

        output_directory = cwd / "video_upload"
        output = output_directory / f"{video_id}.mp4"

        if video_url is None or len(video_url) <= 0:
            await musicaldown(url=input_url, output=output)
        else:
            await get_content(url=video_url, output=output, cookies=cookies)

        await wait_message.delete()  # –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ

        video = FSInputFile(output)
        await message.answer_video(video=video)

        logger.info(
            f"ID: {message.from_user.id}, –ò–º—è: @{message.from_user.username} ‚Äî —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è TikTok."
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ TikTok: {str(e)} URL: {input_url}")
        await message.answer(messages["tiktok_download_error"])
    finally:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª, –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
        if output is not None and output.exists():
            output.unlink()


@router.message()
async def download_media(message: Message):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π)
    language_code = "ru" if message.from_user.language_code == "ru" else "en"
    messages = ru["messages"] if language_code == "ru" else en["messages"]

    await message.answer(messages["weird_link_message"])
